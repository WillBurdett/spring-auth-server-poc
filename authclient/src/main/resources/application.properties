spring.application.name=authclient
server.port=8082

# we call our provider whatever we want and define it next...
spring.security.oauth2.client.registration.spring.provider=spring

# here we tell our registration provider where our authorisation server is
spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:8080

# define our client id on our registration
spring.security.oauth2.client.registration.spring.client-id=client

# our plaintext secret that's setup by our auth server
spring.security.oauth2.client.registration.spring.client-secret=secret

# this must be added to auth server
spring.security.oauth2.client.registration.spring.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring.client-authentication-method=client_secret_basic

# whatever the request is to this backend
# we're going to resolve baseUrl of the request (spring security substitutes this)
# registrationId is what we have provided above - so 'spring' in this case
# this prevents us hardcoding anything
spring.security.oauth2.client.registration.spring.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# user.read as the scope
# we also add openId connect as that's what we want to log-in using
spring.security.oauth2.client.registration.spring.scope[]=user.read,openid
